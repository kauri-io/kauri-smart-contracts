dist: xenial
language: node_js
node_js:
  - "10.15.3"
sudo: false
services:
- docker
branches:
  only:
  - master
  - development
  - dev2
cache:
  directories:
  - "$HOME/google-cloud-sdk/"
before_install:
- if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
   openssl aes-256-cbc -K $encrypted_57c9ae68dfc1_key -iv $encrypted_57c9ae68dfc1_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d;
  fi
# Create environment variable for correct distribution
- export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
# Add the Cloud SDK distribution URI as a package source
- echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
# Import the Google Cloud Platform public key
- curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
# Update the package list and install the Cloud SDK
- sudo apt-get update && sudo apt-get install google-cloud-sdk kubectl
- gcloud --quiet version
- if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
    tar -xzf credentials.tar.gz;
  fi
- mkdir -p lib
- if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
    gcloud auth activate-service-account --key-file client-secret.json;
  fi
- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
- sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
  $(lsb_release -cs) stable"
- sudo apt-get update
- sudo apt-get -yq --force-yes -o Dpkg::Options::="--force-confold" install docker-ce
- sudo rm /usr/local/bin/docker-compose
- curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > docker-compose
- chmod +x docker-compose
- sudo mv docker-compose /usr/local/bin
- export COMMITTER_EMAIL="$(git log -1 $TRAVIS_COMMIT --pretty="%cE")"
- export AUTHOR_NAME="$(git log -1 $TRAVIS_COMMIT --pretty="%aN")"
- git config --global user.name "Travis CI User"
- git config --global user.email "user@example.com"
# Workaround for invalid GPG keys for MongoDB, CouchDB, and git-lfs
- sudo rm -f /etc/apt/sources.list.d/mongodb*
- sudo rm -f /etc/apt/sources.list.d/couchdb*
- sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 762E3157
- sudo add-apt-repository ppa:ethereum/ethereum -y
- sudo apt-get update
- sudo apt-get install build-essential -y
- sudo apt-get install gcc g++ libssl-dev libudev-dev pkg-config
- curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
- sudo apt-get install -y nodejs
- rm -rf node_modules
after_install:
- docker kill $(docker ps -q)
jobs:
  include:
  - stage: solidity-tests-mainchain
    install:
    - npm install -g ganache-cli@6.2.3 truffle@5.0.1
    - cd mainchain
    - npm install
    script:
    - ../travis/runTests.sh
  - stage: solidity-tests-sidechain
    install:
    - npm install -g ganache-cli@6.2.3 truffle@5.0.1
    - cd sidechain
    - npm install
    script:
    - ../travis/runTests.sh
  - stage: git-tag
    if: "(NOT type IN (pull_request) AND (branch = master))"
    install:
    - chmod 600 github_deploy_key
    - eval $(ssh-agent -s)
    - ssh-add github_deploy_key
    - ssh-add -l
    - git remote set-url origin git@github.com:kauri-io/kauri-smart-contracts.git
    - git remote -v
    - git fetch origin 'refs/tags/*:refs/tags/*'
    script:
    - SMART_CONTRACT_VERSION=$(npm version | grep kauri-smart-contracts | head -1
      | awk '{ print $3 }' | sed 's/[",]//g' | sed 's|["'\'']||g')
    - bash kauri-ops/versioning/gittag.sh $SMART_CONTRACT_VERSION
    - NEW_DEV_VERSION=$(kauri-ops/versioning/get-next-dev-ver.sh)
    - echo $NEW_DEV_VERSION
    - git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
    - git fetch --all
    - git checkout development
    - npm version $NEW_DEV_VERSION --no-git-tag-version
    - git add .
    - git commit -m "Travis build $TRAVIS_BUILD_NUMBER updating version after tag"
    - git push origin development
  - stage: deploy-uat
    if: "(NOT type IN (pull_request) AND (branch = master))"
    install:
    - cd kauri-ops
    - source env_setup.sh --config-file config/config-uat.json
    - cd ..
    - gcloud config set project $GOOGLE_PROJECT_ID
    - gcloud container clusters get-credentials $ACS_NAME --zone $GOOGLE_ZONE
    - kubectl config set-context $(kubectl config current-context) --namespace=${TARGET_ENV}
    - docker pull ${REGISTRY_URL}/${GOOGLE_PROJECT_ID}/kauri-contract-abis:latest-${TARGET_ENV}
    script:
    - SMART_CONTRACTS_VERSION=$(npm version | grep kauri-smart-contracts | head -1
      | awk '{ print $3 }' | sed 's/[",]//g' | sed 's|["'\'']||g')
    - echo $SMART_CONTRACTS_VERSION
    - npm install -g ganache-cli@6.2.3 truffle@5.0.1
    - bash ./k8s/run_migrations_mainchain.sh
    - bash ./k8s/run_migrations_sidechain.sh
    - bash ./docker/build-kauri-abis.sh $SMART_CONTRACTS_VERSION
    - bash ./docker/redeploy-k8s.sh $SMART_CONTRACTS_VERSION
    - kubectl delete pods -l app=web3-auth
    - sleep 30
    - kubectl delete pods -l app=monolith
  - stage: deploy-dev2
    if: "(NOT type IN (pull_request) AND (branch = dev2))"
    install:
    - cd kauri-ops
    - source env_setup.sh --config-file config/config-dev2.json
    - cd ..
    - gcloud config set project $GOOGLE_PROJECT_ID
    - gcloud container clusters get-credentials $ACS_NAME --zone $GOOGLE_ZONE
    - kubectl config set-context $(kubectl config current-context) --namespace=${TARGET_ENV}
    script:
    - SMART_CONTRACTS_VERSION=$(npm version | grep kauri-smart-contracts | head -1
      | awk '{ print $3 }' | sed 's/[",]//g' | sed 's|["'\'']||g')
    - echo $SMART_CONTRACTS_VERSION
    - npm install -g ganache-cli@6.2.3 truffle@5.0.1
    - bash ./k8s/run_migrations_mainchain.sh
    - bash ./k8s/run_migrations_sidechain.sh
    - bash ./docker/build-kauri-abis.sh $SMART_CONTRACTS_VERSION-SNAPSHOT2
    - bash ./k8s/redeploy-k8s.sh $SMART_CONTRACTS_VERSION-SNAPSHOT2
    # Restart middleware pods
    - kubectl delete pods -l app=web3-auth
    - sleep 30
    - kubectl delete pods -l app=monolith
  - stage: deploy-dev
    if: "(NOT env(AUTHOR_NAME) =~ ^Travis AND (NOT type IN (pull_request)) AND (branch
      = development))"
    install:
    - cd kauri-ops
    - source env_setup.sh --config-file config/config-dev.json
    - cd ..
    - gcloud config set project $GOOGLE_PROJECT_ID
    - gcloud container clusters get-credentials $ACS_NAME --zone $GOOGLE_ZONE
    - kubectl config set-context $(kubectl config current-context) --namespace=${TARGET_ENV}
    - docker pull ${REGISTRY_URL}/${GOOGLE_PROJECT_ID}/kauri-contract-abis:latest-${TARGET_ENV}
    script:
    - SMART_CONTRACTS_VERSION=$(npm version | grep kauri-smart-contracts | head -1
      | awk '{ print $3 }' | sed 's/[",]//g' | sed 's|["'\'']||g')
    - if [ "$AUTHOR_NAME" != "Travis CI User" ]; then npm install -g ganache-cli@6.2.3 truffle@5.0.1; fi
    - if [ "$AUTHOR_NAME" != "Travis CI User" ]; then echo $SMART_CONTRACTS_VERSION; fi
    - if [ "$AUTHOR_NAME" != "Travis CI User" ]; then bash ./k8s/run_migrations_mainchain.sh; fi
    - if [ "$AUTHOR_NAME" != "Travis CI User" ]; then bash ./k8s/run_migrations_sidechain.sh; fi
    - if [ "$AUTHOR_NAME" != "Travis CI User" ]; then bash ./docker/build-kauri-abis.sh $SMART_CONTRACTS_VERSION-SNAPSHOT; fi
    - if [ "$AUTHOR_NAME" != "Travis CI User" ]; then bash ./k8s/redeploy-k8s.sh $SMART_CONTRACTS_VERSION-SNAPSHOT; fi
    - if [ "$AUTHOR_NAME" != "Travis CI User" ]; then kubectl delete pods -l app=web3-auth; fi
    - if [ "$AUTHOR_NAME" != "Travis CI User" ]; then sleep 30; fi
    - if [ "$AUTHOR_NAME" != "Travis CI User" ]; then kubectl delete pods -l app=monolith; fi
